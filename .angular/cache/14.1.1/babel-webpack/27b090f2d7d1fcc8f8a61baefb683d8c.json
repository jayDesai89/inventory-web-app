{"ast":null,"code":"import { select } from '@ngrx/store';\nimport { setAPIStatus } from 'src/app/shared/store/app.action';\nimport { selectAppState } from 'src/app/shared/store/app.selector';\nimport { invokeInventoryAPI, invokeReceivePartAPI } from '../store/inventory.action';\nimport { selectInventory, selectPartById } from '../store/inventory.selector';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\n\nfunction DashboardComponent_tr_19_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_tr_19_div_15_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.inStockQuantity = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_19_div_15_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const part_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.someMethod(part_r1.id));\n    });\n    i0.ɵɵtext(3, \"save\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.inStockQuantity);\n  }\n}\n\nconst _c0 = function (a1) {\n  return [\"/edit\", a1];\n};\n\nfunction DashboardComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 10);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 10);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementStart(11, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_19_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const part_r1 = restoredCtx.$implicit;\n      const i_r2 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.receive(part_r1.id, i_r2));\n    });\n    i0.ɵɵtext(12, \"+\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_19_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const part_r1 = restoredCtx.$implicit;\n      const i_r2 = restoredCtx.index;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.consume(part_r1.id, i_r2));\n    });\n    i0.ɵɵtext(14, \"--\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, DashboardComponent_tr_19_div_15_Template, 4, 1, \"div\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\")(17, \"a\", 13);\n    i0.ɵɵtext(18, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const part_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(part_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(part_r1 == null ? null : part_r1.partNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(part_r1 == null ? null : part_r1.cost);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", part_r1 == null ? null : part_r1.inStock, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.enableEditIndex == i_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(7, _c0, part_r1.id));\n  }\n}\n\nexport class DashboardComponent {\n  constructor(store, appStore) {\n    this.store = store;\n    this.appStore = appStore;\n    this.parts$ = this.store.pipe(select(selectInventory));\n    this.display = false;\n    this.isEditing = false;\n    this.enableEditIndex = null;\n    this.partForm = {\n      id: 0,\n      cost: 0,\n      partNumber: '',\n      description: '',\n      name: '',\n      notes: '',\n      inStock: 20,\n      image: {},\n      isActive: true\n    };\n  }\n\n  ngOnInit() {\n    this.store.dispatch(invokeInventoryAPI());\n    this.parts$.subscribe(data => {\n      this.numOfParts = data.reduce((previousValue, currentValue) => previousValue + currentValue.inStock, 0);\n      console.log(this.numOfParts);\n    });\n  }\n\n  receive(id, index) {\n    this.switchEditMode(index);\n    console.log('receive', id);\n    this.display = true;\n    let fetchdata$ = this.store.pipe(select(selectPartById(id)));\n    fetchdata$.subscribe(data => {\n      if (data) {\n        this.partForm = { ...data\n        };\n      }\n    }); // this.display = true;\n  }\n\n  switchEditMode(i) {\n    this.isEditing = true;\n    this.enableEditIndex = i;\n  }\n\n  consume(id, index) {\n    this.switchEditMode(index);\n    console.log('consume', id);\n    this.display = false;\n  }\n\n  someMethod(id) {\n    this.store.dispatch(invokeReceivePartAPI({\n      quantity: this.inStockQuantity,\n      id: id\n    }));\n    let apiStatus$ = this.appStore.pipe(select(selectAppState));\n    apiStatus$.subscribe(appState => {\n      if (appState.apiStatus == 'success') {\n        this.appStore.dispatch(setAPIStatus({\n          apiStatus: {\n            apiResponseMessage: '',\n            apiStatus: ''\n          }\n        }));\n      }\n    });\n    this.inStockQuantity = null;\n    this.enableEditIndex = null;\n  }\n\n}\n\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i1.Store));\n};\n\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 23,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col\"], [1, \"table\", \"table-hover\"], [1, \"thead-dark\"], [\"scope\", \"col\", 1, \"text-center\"], [\"scope\", \"col\", 1, \"text-left\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\", 1, \"text-center\"], [1, \"text-left\"], [1, \"text-center\"], [3, \"click\"], [4, \"ngIf\"], [1, \"btn\", \"btn-dark\", 3, \"routerLink\"], [\"type\", \"number\", \"id\", \"txtinStock\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\")(4, \"table\", 3)(5, \"thead\", 4)(6, \"tr\")(7, \"th\", 5);\n      i0.ɵɵtext(8, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 6);\n      i0.ɵɵtext(10, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 5);\n      i0.ɵɵtext(12, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\", 5);\n      i0.ɵɵtext(14, \"Cost\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\", 5);\n      i0.ɵɵtext(16, \"In-stock\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"th\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"tbody\");\n      i0.ɵɵtemplate(19, DashboardComponent_tr_19_Template, 19, 9, \"tr\", 7);\n      i0.ɵɵpipe(20, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\");\n      i0.ɵɵtext(22);\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(20, 2, ctx.parts$));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", ctx.numOfParts, \" \");\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLinkWithHref, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgModel, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["select","setAPIStatus","selectAppState","invokeInventoryAPI","invokeReceivePartAPI","selectInventory","selectPartById","i0","DashboardComponent","constructor","store","appStore","pipe","id","cost","partNumber","description","name","notes","inStock","image","isActive","ngOnInit","dispatch","parts$","subscribe","data","numOfParts","reduce","previousValue","currentValue","console","log","receive","index","switchEditMode","display","fetchdata$","partForm","i","isEditing","enableEditIndex","consume","someMethod","quantity","inStockQuantity","apiStatus$","appState","apiStatus","apiResponseMessage","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Jay\\Personal_Projects\\atp-inventory-app\\src\\app\\inventory\\dashboard\\dashboard.component.ts","D:\\Jay\\Personal_Projects\\atp-inventory-app\\src\\app\\inventory\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { setAPIStatus } from 'src/app/shared/store/app.action';\nimport { selectAppState } from 'src/app/shared/store/app.selector';\nimport { Appstate } from 'src/app/shared/store/appstate';\nimport { Inventory } from '../store/inventory';\nimport {\n  invokeInventoryAPI,\n  invokeReceivePartAPI,\n} from '../store/inventory.action';\nimport { selectInventory, selectPartById } from '../store/inventory.selector';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  parts$ = this.store.pipe(select(selectInventory));\n  numOfParts: number;\n  display: boolean = false;\n  inStockQuantity: number;\n  isEditing: boolean = false;\n  enableEditIndex = null;\n\n  constructor(\n    private store: Store,\n    private appStore: Store<Appstate>) {}\n\n  partForm: Inventory = {\n    id: 0,\n    cost: 0,\n    partNumber: '',\n    description: '',\n    name: '',\n    notes: '',\n    inStock: 20,\n    image: {},\n    isActive: true,\n  };\n\n  ngOnInit(): void {\n    this.store.dispatch(invokeInventoryAPI());\n\n    this.parts$.subscribe((data) => {\n      this.numOfParts = data.reduce(\n        (previousValue, currentValue) => previousValue + currentValue.inStock,\n        0\n      );\n      console.log(this.numOfParts);\n    });\n  }\n\n  receive(id, index) {\n    this.switchEditMode(index);\n    console.log('receive', id);\n    this.display = true;\n    let fetchdata$ = this.store.pipe(select(selectPartById(id)));\n    fetchdata$.subscribe((data) => {\n      if (data) {\n        this.partForm = {... data};\n      }\n    })\n    // this.display = true;\n  }\n\n  switchEditMode(i) {\n    this.isEditing = true;\n    this.enableEditIndex = i;\n  }\n\n  consume(id, index) {\n    this.switchEditMode(index);\n    console.log('consume', id);\n    this.display = false;\n  }\n\n  someMethod(id){\n    this.store.dispatch(\n      invokeReceivePartAPI({quantity: this.inStockQuantity, id: id})\n    );\n    let apiStatus$ = this.appStore.pipe(select(selectAppState));\n    apiStatus$.subscribe((appState) => {\n      if(appState.apiStatus == 'success') {\n        this.appStore.dispatch(\n          setAPIStatus({ apiStatus: {apiResponseMessage:'', apiStatus:''}})\n        );\n      }\n    })\n    this.inStockQuantity = null;\n    this.enableEditIndex = null;\n  }\n}\n","<section class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <div>\n        <table class=\"table table-hover\">\n          <thead class=\"thead-dark\">\n            <tr>\n              <th scope=\"col\" class=\"text-center\">#</th>\n              <th scope=\"col\" class=\"text-left\">Name</th>\n              <th scope=\"col\" class=\"text-center\">Number</th>\n              <th scope=\"col\" class=\"text-center\">Cost</th>\n              <th scope=\"col\" class=\"text-center\">In-stock</th>\n              <th scope=\"col\" class=\"text-center\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let part of parts$| async ; index as i\">\n              <td scope=\"row\" class=\"text-center\">{{i+1}}</td>\n              <td class=\"text-left\">{{part.name}}</td>\n              <td class=\"text-center\">{{part?.partNumber}}</td>\n              <td class=\"text-center\">{{part?.cost}}</td>\n              <td class=\"text-center\">\n                  {{part?.inStock}}\n\n                <button (click)=\"receive(part.id,i);\">+</button>\n                <button (click)=\"consume(part.id,i);\">--</button>\n                <div *ngIf=\"enableEditIndex == i\">\n                  <input\n                  type=\"number\"\n                  [(ngModel)]=\"inStockQuantity\"\n                  class=\"form-control\"\n                  id=\"txtinStock\"\n                />\n                  <button (click)=\"someMethod(part.id)\">save</button>\n                </div>\n            </td>\n              <td> <a [routerLink]=\"['/edit', part.id]\" class=\"btn btn-dark\">Edit</a></td>\n            </tr>\n          </tbody>\n          <div>\n            {{numOfParts}}\n          </div>\n        </table>\n      </div>\n    </div>\n  </div>\n</section>\n\n"]},"metadata":{},"sourceType":"module"}