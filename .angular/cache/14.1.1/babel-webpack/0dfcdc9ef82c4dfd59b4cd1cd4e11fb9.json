{"ast":null,"code":"import { select } from '@ngrx/store';\nimport { invokeInventoryAPI } from '../store/inventory.action';\nimport { selectInventory } from '../store/inventory.selector';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\n\nfunction DashboardComponent_tr_19_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_tr_19_div_16_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.partForm.inStock = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.partForm.inStock);\n  }\n}\n\nconst _c0 = function (a1) {\n  return [\"/edit\", a1];\n};\n\nfunction DashboardComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 10);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 10);\n    i0.ɵɵelementContainerStart(10);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementStart(12, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_19_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const part_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.receive(part_r1.id));\n    });\n    i0.ɵɵtext(13, \"+\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_19_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const part_r1 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.consume(part_r1.id));\n    });\n    i0.ɵɵtext(15, \"--\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(16, DashboardComponent_tr_19_div_16_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\")(18, \"a\", 13);\n    i0.ɵɵtext(19, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const part_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(part_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(part_r1 == null ? null : part_r1.partNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(part_r1 == null ? null : part_r1.cost);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", part_r1 == null ? null : part_r1.inStock, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.display && part_r1.id == i_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(7, _c0, part_r1.id));\n  }\n}\n\nexport class DashboardComponent {\n  constructor(store) {\n    this.store = store;\n    this.parts$ = this.store.pipe(select(selectInventory));\n    this.display = false;\n    this.partForm = {\n      id: 0,\n      cost: 0,\n      partNumber: '',\n      description: '',\n      name: '',\n      notes: '',\n      inStock: 0,\n      image: {},\n      isActive: true\n    };\n  }\n\n  ngOnInit() {\n    this.store.dispatch(invokeInventoryAPI());\n    this.parts$.subscribe(data => {\n      this.numOfParts = data.reduce((previousValue, currentValue) => previousValue + currentValue.inStock, 0);\n      console.log(this.numOfParts);\n    });\n  }\n\n  receive(id) {\n    console.log('receive', id);\n    this.display = true;\n  }\n\n  consume(id) {\n    console.log('consume', id);\n    this.display = false;\n  }\n\n}\n\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 21,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col\"], [1, \"table\", \"table-hover\"], [1, \"thead-dark\"], [\"scope\", \"col\", 1, \"text-center\"], [\"scope\", \"col\", 1, \"text-left\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\", 1, \"text-center\"], [1, \"text-left\"], [1, \"text-center\"], [3, \"click\"], [4, \"ngIf\"], [1, \"btn\", \"btn-dark\", 3, \"routerLink\"], [\"type\", \"number\", \"id\", \"txtinStock\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\")(4, \"table\", 3)(5, \"thead\", 4)(6, \"tr\")(7, \"th\", 5);\n      i0.ɵɵtext(8, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 6);\n      i0.ɵɵtext(10, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 5);\n      i0.ɵɵtext(12, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\", 5);\n      i0.ɵɵtext(14, \"Cost\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\", 5);\n      i0.ɵɵtext(16, \"In-stock\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"th\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"tbody\");\n      i0.ɵɵtemplate(19, DashboardComponent_tr_19_Template, 20, 9, \"tr\", 7);\n      i0.ɵɵpipe(20, \"async\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(20, 1, ctx.parts$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLinkWithHref, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgModel, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,MAAT,QAA8B,aAA9B;AAEA,SACEC,kBADF,QAGO,2BAHP;AAIA,SAASC,eAAT,QAAgC,6BAAhC;;;;;;;;;;;ICqBgBC,4BAAqC,CAArC,EAAqC,OAArC,EAAqC,EAArC;IAGEA;MAAAA;MAAA;MAAA,OAAaA,gDAAb;IACZ,CADY;IAFAA;;;;;IAEAA;IAAAA;;;;;;;;;;;;IAfNA,2BAAoD,CAApD,EAAoD,IAApD,EAAoD,CAApD;IACsCA;IAAOA;IAC3CA;IAAsBA;IAAaA;IACnCA;IAAwBA;IAAoBA;IAC5CA;IAAwBA;IAAcA;IACtCA;IACEA;IACEA;IACFA;IAEAA;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,0CAAT;IAAyB,CAAzB;IAA4BA;IAACA;IACrCA;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,0CAAT;IAAyB,CAAzB;IAA2BA;IAAEA;IACrCA;IASJA;IACEA,4BAAI,EAAJ,EAAI,GAAJ,EAAI,EAAJ;IAA+DA;IAAIA;;;;;;;IArB/BA;IAAAA;IACdA;IAAAA;IACEA;IAAAA;IACAA;IAAAA;IAGpBA;IAAAA;IAKIA;IAAAA;IAUAA;IAAAA;;;;ADxBtB,OAAM,MAAOC,kBAAP,CAAyB;EAK7BC,YAAoBC,KAApB,EAAgC;IAAZ;IAJpB,cAAS,KAAKA,KAAL,CAAWC,IAAX,CAAgBP,MAAM,CAACE,eAAD,CAAtB,CAAT;IAEA,eAAmB,KAAnB;IAIA,gBAAsB;MACpBM,EAAE,EAAE,CADgB;MAEpBC,IAAI,EAAE,CAFc;MAGpBC,UAAU,EAAE,EAHQ;MAIpBC,WAAW,EAAE,EAJO;MAKpBC,IAAI,EAAE,EALc;MAMpBC,KAAK,EAAE,EANa;MAOpBC,OAAO,EAAE,CAPW;MAQpBC,KAAK,EAAE,EARa;MASpBC,QAAQ,EAAE;IATU,CAAtB;EAFoC;;EAcpCC,QAAQ;IACN,KAAKX,KAAL,CAAWY,QAAX,CAAoBjB,kBAAkB,EAAtC;IAEA,KAAKkB,MAAL,CAAYC,SAAZ,CAAuBC,IAAD,IAAS;MAC7B,KAAKC,UAAL,GAAkBD,IAAI,CAACE,MAAL,CAChB,CAACC,aAAD,EAAgBC,YAAhB,KAAiCD,aAAa,GAAGC,YAAY,CAACX,OAD9C,EAEhB,CAFgB,CAAlB;MAIAY,OAAO,CAACC,GAAR,CAAY,KAAKL,UAAjB;IACD,CAND;EAOD;;EAEDM,OAAO,CAACpB,EAAD,EAAG;IACRkB,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBnB,EAAvB;IACA,KAAKqB,OAAL,GAAe,IAAf;EACD;;EAEDC,OAAO,CAACtB,EAAD,EAAG;IACRkB,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBnB,EAAvB;IACA,KAAKqB,OAAL,GAAe,KAAf;EACD;;AAvC4B;;;mBAAlBzB,oBAAkBD;AAAA;;;QAAlBC;EAAkB2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCd/BhC,mCAA2B,CAA3B,EAA2B,KAA3B,EAA2B,CAA3B,EAA2B,CAA3B,EAA2B,KAA3B,EAA2B,CAA3B,EAA2B,CAA3B,EAA2B,KAA3B,EAA2B,CAA3B,EAA2B,OAA3B,EAA2B,CAA3B,EAA2B,CAA3B,EAA2B,OAA3B,EAA2B,CAA3B,EAA2B,CAA3B,EAA2B,IAA3B,EAA2B,CAA3B,EAA2B,IAA3B,EAA2B,CAA3B;MAOkDA;MAACA;MACrCA;MAAkCA;MAAIA;MACtCA;MAAoCA;MAAMA;MAC1CA;MAAoCA;MAAIA;MACxCA;MAAoCA;MAAQA;MAC5CA;MACFA;MAEFA;MACEA;;MAwBFA;;;;MAxBuBA;MAAAA","names":["select","invokeInventoryAPI","selectInventory","i0","DashboardComponent","constructor","store","pipe","id","cost","partNumber","description","name","notes","inStock","image","isActive","ngOnInit","dispatch","parts$","subscribe","data","numOfParts","reduce","previousValue","currentValue","console","log","receive","display","consume","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Jay\\Personal_Projects\\atp-inventory-app\\src\\app\\inventory\\dashboard\\dashboard.component.ts","D:\\Jay\\Personal_Projects\\atp-inventory-app\\src\\app\\inventory\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Inventory } from '../store/inventory';\nimport {\n  invokeInventoryAPI,\n  invokeReceivePartAPI,\n} from '../store/inventory.action';\nimport { selectInventory } from '../store/inventory.selector';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  parts$ = this.store.pipe(select(selectInventory));\n  numOfParts: number;\n  display: boolean = false;\n\n  constructor(private store: Store) {}\n\n  partForm: Inventory = {\n    id: 0,\n    cost: 0,\n    partNumber: '',\n    description: '',\n    name: '',\n    notes: '',\n    inStock: 0,\n    image: {},\n    isActive: true,\n  };\n\n  ngOnInit(): void {\n    this.store.dispatch(invokeInventoryAPI());\n\n    this.parts$.subscribe((data) => {\n      this.numOfParts = data.reduce(\n        (previousValue, currentValue) => previousValue + currentValue.inStock,\n        0\n      );\n      console.log(this.numOfParts);\n    });\n  }\n\n  receive(id) {\n    console.log('receive', id);\n    this.display = true;\n  }\n\n  consume(id) {\n    console.log('consume', id);\n    this.display = false;\n  }\n}\n","<section class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <div>\n        <table class=\"table table-hover\">\n          <thead class=\"thead-dark\">\n            <tr>\n              <th scope=\"col\" class=\"text-center\">#</th>\n              <th scope=\"col\" class=\"text-left\">Name</th>\n              <th scope=\"col\" class=\"text-center\">Number</th>\n              <th scope=\"col\" class=\"text-center\">Cost</th>\n              <th scope=\"col\" class=\"text-center\">In-stock</th>\n              <th scope=\"col\" class=\"text-center\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let part of parts$| async ; index as i\">\n              <td scope=\"row\" class=\"text-center\">{{i+1}}</td>\n              <td class=\"text-left\">{{part.name}}</td>\n              <td class=\"text-center\">{{part?.partNumber}}</td>\n              <td class=\"text-center\">{{part?.cost}}</td>\n              <td class=\"text-center\">\n                <ng-container>\n                  {{part?.inStock}}\n                </ng-container>\n\n                <button (click)=\"receive(part.id);\">+</button>\n                <button (click)=\"consume(part.id)\">--</button>\n                <div *ngIf=\"display && part.id == i\">\n                  <input\n                  type=\"number\"\n                  [(ngModel)]=\"partForm.inStock\"\n                  class=\"form-control\"\n                  id=\"txtinStock\"\n                />\n\n                </div>\n            </td>\n              <td> <a [routerLink]=\"['/edit', part.id]\" class=\"btn btn-dark\">Edit</a></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</section>\n\n"]},"metadata":{},"sourceType":"module"}