{"ast":null,"code":"import { select } from '@ngrx/store';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { setAPIStatus } from 'src/app/shared/store/app.action';\nimport { selectAppState } from 'src/app/shared/store/app.selector';\nimport { invokeConsumePartAPI, invokeInventoryAPI, invokeReceivePartAPI } from '../store/inventory.action';\nimport { selectInventory, selectPartById } from '../store/inventory.selector';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\n\nfunction DashboardComponent_tr_33_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_33_div_13_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      const part_r1 = ctx_r6.$implicit;\n      const i_r2 = ctx_r6.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.receivePart(part_r1.id, i_r2));\n    });\n    i0.ɵɵelement(2, \"img\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_33_div_13_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      const part_r1 = ctx_r9.$implicit;\n      const i_r2 = ctx_r9.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.consumePart(part_r1.id, i_r2));\n    });\n    i0.ɵɵelement(4, \"img\", 23);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DashboardComponent_tr_33_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"input\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_tr_33_div_14_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.inStockQuantity = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"div\")(3, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_33_div_14_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const part_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.updateInStock(part_r1.id));\n    });\n    i0.ɵɵtext(4, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_33_div_14_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.closeField());\n    });\n    i0.ɵɵtext(6, \"Cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.inStockQuantity);\n  }\n}\n\nconst _c0 = function (a1) {\n  return [\"/edit\", a1];\n};\n\nfunction DashboardComponent_tr_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 14);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 14);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 14)(10, \"div\", 15);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementStart(12, \"div\", 16);\n    i0.ɵɵtemplate(13, DashboardComponent_tr_33_div_13_Template, 5, 0, \"div\", 17);\n    i0.ɵɵtemplate(14, DashboardComponent_tr_33_div_14_Template, 7, 1, \"div\", 18);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(15, \"td\", 14)(16, \"a\", 19);\n    i0.ɵɵtext(17, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const part_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(part_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(part_r1 == null ? null : part_r1.partNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(part_r1 == null ? null : part_r1.cost);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", part_r1 == null ? null : part_r1.inStock, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.enableEditIndex != i_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.enableEditIndex == i_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(8, _c0, part_r1.id));\n  }\n}\n\nexport class DashboardComponent {\n  constructor(store, appStore) {\n    this.store = store;\n    this.appStore = appStore;\n    this.parts$ = this.store.pipe(select(selectInventory));\n    this.display = false;\n    this.isEditing = false;\n    this.enableEditIndex = null;\n    this.consume = false;\n    this.receive = false;\n    this.partForm = {\n      id: 0,\n      cost: 0,\n      partNumber: '',\n      description: '',\n      name: '',\n      notes: '',\n      inStock: 20,\n      image: {},\n      isActive: true\n    };\n  }\n\n  ngOnInit() {\n    this.store.dispatch(invokeInventoryAPI());\n    this.parts$.subscribe(data => {\n      this.numOfParts = data.reduce((previousValue, currentValue) => previousValue + currentValue.inStock, 0);\n    });\n  }\n\n  switchEditMode(i) {\n    this.isEditing = true;\n    this.enableEditIndex = i;\n  }\n\n  receivePart(id, index) {\n    this.receive = true;\n    this.switchEditMode(index);\n  }\n\n  consumePart(id, index) {\n    this.consume = true;\n    this.switchEditMode(index);\n  }\n\n  closeField() {\n    this.enableEditIndex = null;\n  }\n\n  resetFlags() {\n    this.receive = false;\n    this.consume = false;\n    this.inStockQuantity = null;\n    this.enableEditIndex = null;\n  }\n\n  updateInStock(id) {\n    let fetchdata$ = this.store.pipe(select(selectPartById(id)));\n    fetchdata$.subscribe(data => {\n      if (data) {\n        this.partForm = { ...data\n        };\n      }\n    });\n    debugger;\n\n    if (this.receive) {\n      this.store.dispatch(invokeReceivePartAPI({\n        quantity: this.inStockQuantity,\n        id: id\n      }));\n      debugger;\n    } else if (this.consume) {\n      this.store.dispatch(invokeConsumePartAPI({\n        quantity: this.inStockQuantity,\n        id: id\n      }));\n    }\n\n    let apiStatus$ = this.appStore.pipe(select(selectAppState));\n    apiStatus$.subscribe(appState => {\n      if (appState.apiStatus == 'success') {\n        this.appStore.dispatch(setAPIStatus({\n          apiStatus: {\n            apiResponseMessage: '',\n            apiStatus: ''\n          }\n        }));\n      }\n    }), catchError(err => {\n      return throwError(err);\n    });\n    this.resetFlags();\n  }\n\n}\n\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i1.Store));\n};\n\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 36,\n  vars: 3,\n  consts: [[1, \"dashboard\"], [1, \"container\"], [1, \"row\"], [1, \"col\"], [1, \"header\"], [\"type\", \"button\", \"routerLink\", \"/add\", 1, \"btn\", \"btn-dark\"], [1, \"container\", \"parts-data\"], [1, \"table\", \"table-hover\"], [1, \"thead-dark\"], [\"scope\", \"col\", 1, \"text-center\"], [\"scope\", \"col\", 1, \"text-left\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\", 1, \"text-center\"], [1, \"text-left\"], [1, \"text-center\"], [1, \"in-stock\", 2, \"display\", \"flex, flex-direction column\"], [1, \"stock-btn\"], [\"class\", \"action-btn\", 4, \"ngIf\"], [\"class\", \"save-btn\", 4, \"ngIf\"], [1, \"btn\", \"btn-dark\", 3, \"routerLink\"], [1, \"action-btn\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"src\", \"../../../assets/icons/plus-lg.svg\", \"alt\", \"receiving\"], [\"src\", \"../../../assets/icons/dash-lg.svg\", \"alt\", \"consuming\"], [1, \"save-btn\"], [\"type\", \"number\", \"id\", \"txtinStock\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"section\")(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\")(7, \"h1\");\n      i0.ɵɵtext(8, \"Parts Inventory\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\")(10, \"a\", 5);\n      i0.ɵɵtext(11, \"Add A New Part\");\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵelement(12, \"hr\");\n      i0.ɵɵelementStart(13, \"section\")(14, \"div\", 6)(15, \"div\", 2)(16, \"div\", 3)(17, \"div\")(18, \"table\", 7)(19, \"thead\", 8)(20, \"tr\")(21, \"th\", 9);\n      i0.ɵɵtext(22, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\", 10);\n      i0.ɵɵtext(24, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\", 9);\n      i0.ɵɵtext(26, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"th\", 9);\n      i0.ɵɵtext(28, \"Cost\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"th\", 9);\n      i0.ɵɵtext(30, \"In-stock\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"th\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"tbody\");\n      i0.ɵɵtemplate(33, DashboardComponent_tr_33_Template, 18, 10, \"tr\", 11);\n      i0.ɵɵpipe(34, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"div\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(33);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(34, 1, ctx.parts$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLinkWithHref, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgModel, i2.AsyncPipe],\n  styles: [\".dashboard[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 2% 0;\\n}\\n.dashboard[_ngcontent-%COMP%]   .parts-data[_ngcontent-%COMP%] {\\n  margin-top: 1%;\\n}\\n.dashboard[_ngcontent-%COMP%]   .parts-data[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .in-stock[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.dashboard[_ngcontent-%COMP%]   .parts-data[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .in-stock[_ngcontent-%COMP%]   .stock-btn[_ngcontent-%COMP%]   .action-btn[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n}\\n.dashboard[_ngcontent-%COMP%]   .parts-data[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .in-stock[_ngcontent-%COMP%]   .stock-btn[_ngcontent-%COMP%]   .save-btn[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  padding: 3% 0;\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtFQUNBLDhCQUFBO0VBQ0EsYUFBQTtBQUFKO0FBRUU7RUFDRSxjQUFBO0FBQUo7QUFHTTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtBQURSO0FBR1U7RUFDRSxXQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsOEJBQUE7QUFEWjtBQUlZO0VBQ0UsYUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSw4QkFBQTtFQUNBLG1CQUFBO0FBRmQiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRhc2hib2FyZCB7XHJcbiAgLmhlYWRlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBwYWRkaW5nOiAyJSAwO1xyXG4gIH1cclxuICAucGFydHMtZGF0YSB7XHJcbiAgICBtYXJnaW4tdG9wOiAxJTtcclxuXHJcbiAgICB0YWJsZSB7XHJcbiAgICAgIC5pbi1zdG9jayB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIC5zdG9jay1idG57XHJcbiAgICAgICAgICAuYWN0aW9uLWJ0bntcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5zYXZlLWJ0biB7XHJcbiAgICAgICAgICAgIGRpdiB7XHJcbiAgICAgICAgICAgICAgcGFkZGluZzogMyUgMDtcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["select","throwError","catchError","setAPIStatus","selectAppState","invokeConsumePartAPI","invokeInventoryAPI","invokeReceivePartAPI","selectInventory","selectPartById","i0","DashboardComponent","constructor","store","appStore","pipe","id","cost","partNumber","description","name","notes","inStock","image","isActive","ngOnInit","dispatch","parts$","subscribe","data","numOfParts","reduce","previousValue","currentValue","switchEditMode","i","isEditing","enableEditIndex","receivePart","index","receive","consumePart","consume","closeField","resetFlags","inStockQuantity","updateInStock","fetchdata$","partForm","quantity","apiStatus$","appState","apiStatus","apiResponseMessage","err","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Jay\\Personal_Projects\\atp-inventory-app\\src\\app\\inventory\\dashboard\\dashboard.component.ts","D:\\Jay\\Personal_Projects\\atp-inventory-app\\src\\app\\inventory\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { setAPIStatus } from 'src/app/shared/store/app.action';\nimport { selectAppState } from 'src/app/shared/store/app.selector';\nimport { Appstate } from 'src/app/shared/store/appstate';\nimport { Inventory } from '../store/inventory';\nimport {\n  invokeConsumePartAPI,\n  invokeInventoryAPI,\n  invokeReceivePartAPI,\n} from '../store/inventory.action';\nimport { selectInventory, selectPartById } from '../store/inventory.selector';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  parts$ = this.store.pipe(select(selectInventory));\n  numOfParts: number;\n  display: boolean = false;\n  inStockQuantity: number;\n  isEditing: boolean = false;\n  enableEditIndex = null;\n  consume: boolean = false;\n  receive: boolean = false;\n\n  constructor(\n    private store: Store,\n    private appStore: Store<Appstate>) {}\n\n  partForm: Inventory = {\n    id: 0,\n    cost: 0,\n    partNumber: '',\n    description: '',\n    name: '',\n    notes: '',\n    inStock: 20,\n    image: {},\n    isActive: true,\n  };\n\n  ngOnInit(): void {\n    this.store.dispatch(invokeInventoryAPI());\n\n    this.parts$.subscribe((data) => {\n      this.numOfParts = data.reduce(\n        (previousValue, currentValue) => previousValue + currentValue.inStock,\n        0\n      );\n    });\n  }\n\n\n\n\n  switchEditMode(i) {\n    this.isEditing = true;\n    this.enableEditIndex = i;\n  }\n\n\n  receivePart(id, index) {\n    this.receive = true;\n    this.switchEditMode(index);\n  }\n\n  consumePart(id, index) {\n    this.consume = true;\n    this.switchEditMode(index);\n  }\n\n  closeField(){\n    this.enableEditIndex = null;\n  }\n\n  resetFlags(){\n    this.receive = false;\n    this.consume = false;\n    this.inStockQuantity = null;\n    this.enableEditIndex = null;\n  }\n\n  updateInStock(id){\n    let fetchdata$ = this.store.pipe(select(selectPartById(id)));\n    fetchdata$.subscribe((data) => {\n      if (data) {\n        this.partForm = {... data};\n      }\n    })\n    debugger\n    if(this.receive){\n      this.store.dispatch(\n        invokeReceivePartAPI({quantity: this.inStockQuantity, id: id})\n      );\n    debugger\n    } else if (this.consume){\n      this.store.dispatch(\n        invokeConsumePartAPI({quantity: this.inStockQuantity, id: id})\n      );\n    }\n    let apiStatus$ = this.appStore.pipe(select(selectAppState));\n    apiStatus$.subscribe((appState) => {\n      if(appState.apiStatus == 'success') {\n        this.appStore.dispatch(\n          setAPIStatus({ apiStatus: {apiResponseMessage:'', apiStatus:''}})\n        );\n      }\n    }),\n    catchError((err) => {\n      return throwError(err);\n    })\n    this.resetFlags();\n  }\n\n  // consumePart(id){\n\n  //   let apiStatus$ = this.appStore.pipe(select(selectAppState));\n  //   apiStatus$.subscribe((appState) => {\n  //     if(appState.apiStatus == 'success') {\n  //       this.appStore.dispatch(\n  //         setAPIStatus({ apiStatus: {apiResponseMessage:'', apiStatus:''}})\n  //       );\n  //     }\n  //   })\n  //   this.inStockQuantity = null;\n  //   this.enableEditIndex = null;\n  // }\n}\n","<section class=\"dashboard\">\n  <section>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <div class=\"header\">\n            <div>\n              <h1>Parts Inventory</h1>\n            </div>\n            <div>\n              <a type=\"button\" routerLink=\"/add\" class=\"btn btn-dark\">Add A New Part</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <hr/>\n\n  <section>\n    <div class=\"container parts-data\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <div>\n            <table class=\"table table-hover\">\n              <thead class=\"thead-dark\">\n                <tr>\n                  <th scope=\"col\" class=\"text-center\">#</th>\n                  <th scope=\"col\" class=\"text-left\">Name</th>\n                  <th scope=\"col\" class=\"text-center\">Number</th>\n                  <th scope=\"col\" class=\"text-center\">Cost</th>\n                  <th scope=\"col\" class=\"text-center\">In-stock</th>\n                  <th scope=\"col\" class=\"text-center\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let part of parts$| async ; index as i\">\n                  <td scope=\"row\" class=\"text-center\">{{i+1}}</td>\n                  <td class=\"text-left\">{{part.name}}</td>\n                  <td class=\"text-center\">{{part?.partNumber}}</td>\n                  <td class=\"text-center\">{{part?.cost}}</td>\n                  <td class=\"text-center\">\n                    <div class=\"in-stock\" style=\"display: flex, flex-direction column\">\n                      {{part?.inStock}}\n                      <div class=\"stock-btn\">\n                        <div class=\"action-btn\" *ngIf=\"enableEditIndex != i\">\n                          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"receivePart(part.id,i);\">\n                            <img src=\"../../../assets/icons/plus-lg.svg\" alt=\"receiving\">\n                          </button>\n                          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"consumePart(part.id,i);\" >\n                            <img src=\"../../../assets/icons/dash-lg.svg\" alt=\"consuming\">\n                          </button>\n                        </div>\n\n                        <div class=\"save-btn\" *ngIf=\"enableEditIndex == i\">\n                          <input type=\"number\" [(ngModel)]=\"inStockQuantity\" class=\"form-control\" id=\"txtinStock\" />\n                          <div>\n                            <button  type=\"button\" class=\"btn btn-secondary\" (click)=\"updateInStock(part.id)\">Save</button>\n                            <button  type=\"button\" class=\"btn btn-secondary\" (click)=\"closeField()\">Cancel</button>\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n\n\n\n                  </td>\n                  <td class=\"text-center\"> <a [routerLink]=\"['/edit', part.id]\" class=\"btn btn-dark\">Edit</a></td>\n                </tr>\n              </tbody>\n              <div>\n\n              </div>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </section>\n</section>\n"]},"metadata":{},"sourceType":"module"}