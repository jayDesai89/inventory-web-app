{"ast":null,"code":"import { select } from '@ngrx/store';\nimport { invokeInventoryAPI } from '../store/inventory.action';\nimport { selectInventory } from '../store/inventory.selector';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\n\nconst _c0 = function (a1) {\n  return [\"/edit\", a1];\n};\n\nfunction DashboardComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 10);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 10);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementStart(11, \"button\");\n    i0.ɵɵtext(12, \"R\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\");\n    i0.ɵɵtext(14, \"C\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"td\")(16, \"a\", 11);\n    i0.ɵɵtext(17, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const part_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(part_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(part_r1 == null ? null : part_r1.partNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(part_r1 == null ? null : part_r1.cost);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", part_r1 == null ? null : part_r1.inStock, \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(6, _c0, part_r1.id));\n  }\n}\n\nexport class DashboardComponent {\n  constructor(store) {\n    this.store = store;\n    this.parts$ = this.store.pipe(select(selectInventory));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(invokeInventoryAPI());\n    this.parts$.subscribe(data => {\n      this.numOfParts = data.reduce((previousValue, currentValue) => previousValue + currentValue.inStock, 0);\n      console.log(this.numOfParts);\n    });\n  }\n\n}\n\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 21,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col\"], [1, \"table\", \"table-hover\"], [1, \"thead-dark\"], [\"scope\", \"col\", 1, \"text-center\"], [\"scope\", \"col\", 1, \"text-left\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\", 1, \"text-center\"], [1, \"text-left\"], [1, \"text-center\"], [1, \"btn\", \"btn-dark\", 3, \"routerLink\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\")(4, \"table\", 3)(5, \"thead\", 4)(6, \"tr\")(7, \"th\", 5);\n      i0.ɵɵtext(8, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 6);\n      i0.ɵɵtext(10, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 5);\n      i0.ɵɵtext(12, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\", 5);\n      i0.ɵɵtext(14, \"Cost\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\", 5);\n      i0.ɵɵtext(16, \"In-stock\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"th\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"tbody\");\n      i0.ɵɵtemplate(19, DashboardComponent_tr_19_Template, 18, 8, \"tr\", 7);\n      i0.ɵɵpipe(20, \"async\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(20, 1, ctx.parts$));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLinkWithHref, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,MAAT,QAA8B,aAA9B;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,eAAT,QAAgC,6BAAhC;;;;;;;;;;;;ICaYC,2BAAoD,CAApD,EAAoD,IAApD,EAAoD,CAApD;IACsCA;IAAOA;IAC3CA;IAAsBA;IAAaA;IACnCA;IAAwBA;IAAoBA;IAC5CA;IAAwBA;IAAcA;IACtCA;IAAwBA;IAAkBA;IAAQA;IAACA;IAAUA;IAAQA;IAACA;IACtEA,4BAAI,EAAJ,EAAI,GAAJ,EAAI,EAAJ;IAA+DA;IAAIA;;;;;;IAL/BA;IAAAA;IACdA;IAAAA;IACEA;IAAAA;IACAA;IAAAA;IACAA;IAAAA;IAChBA;IAAAA;;;;ADZtB,OAAM,MAAOC,kBAAP,CAAyB;EAI7BC,YAAoBC,KAApB,EAAgC;IAAZ;IAHpB,cAAS,KAAKA,KAAL,CAAWC,IAAX,CAAgBP,MAAM,CAACE,eAAD,CAAtB,CAAT;EAGoC;;EAEpCM,QAAQ;IACN,KAAKF,KAAL,CAAWG,QAAX,CAAoBR,kBAAkB,EAAtC;IAEA,KAAKS,MAAL,CAAYC,SAAZ,CAAuBC,IAAD,IAAS;MAC7B,KAAKC,UAAL,GAAkBD,IAAI,CAACE,MAAL,CAChB,CAACC,aAAD,EAAgBC,YAAhB,KAAiCD,aAAa,GAAGC,YAAY,CAACC,OAD9C,EACsD,CADtD,CAAlB;MAGAC,OAAO,CAACC,GAAR,CAAY,KAAKN,UAAjB;IACD,CALD;EAMD;;AAf4B;;;mBAAlBT,oBAAkBD;AAAA;;;QAAlBC;EAAkBgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV/BrB,mCAA2B,CAA3B,EAA2B,KAA3B,EAA2B,CAA3B,EAA2B,CAA3B,EAA2B,KAA3B,EAA2B,CAA3B,EAA2B,CAA3B,EAA2B,KAA3B,EAA2B,CAA3B,EAA2B,OAA3B,EAA2B,CAA3B,EAA2B,CAA3B,EAA2B,OAA3B,EAA2B,CAA3B,EAA2B,CAA3B,EAA2B,IAA3B,EAA2B,CAA3B,EAA2B,IAA3B,EAA2B,CAA3B;MAOkDA;MAACA;MACrCA;MAAkCA;MAAIA;MACtCA;MAAoCA;MAAMA;MAC1CA;MAAoCA;MAAIA;MACxCA;MAAoCA;MAAQA;MAC5CA;MACFA;MAEFA;MACEA;;MAQFA;;;;MARuBA;MAAAA","names":["select","invokeInventoryAPI","selectInventory","i0","DashboardComponent","constructor","store","pipe","ngOnInit","dispatch","parts$","subscribe","data","numOfParts","reduce","previousValue","currentValue","inStock","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Jay\\Personal_Projects\\atp-inventory-app\\src\\app\\inventory\\dashboard\\dashboard.component.ts","D:\\Jay\\Personal_Projects\\atp-inventory-app\\src\\app\\inventory\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { invokeInventoryAPI } from '../store/inventory.action';\nimport { selectInventory } from '../store/inventory.selector';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  parts$ = this.store.pipe(select(selectInventory));\n  numOfParts: number;\n\n  constructor(private store: Store) {}\n\n  ngOnInit(): void {\n    this.store.dispatch(invokeInventoryAPI());\n\n    this.parts$.subscribe((data) => {\n      this.numOfParts = data.reduce(\n        (previousValue, currentValue) => previousValue + currentValue.inStock,0\n      );\n      console.log(this.numOfParts)\n    })\n  }\n\n}\n","<section class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <div>\n        <table class=\"table table-hover\">\n          <thead class=\"thead-dark\">\n            <tr>\n              <th scope=\"col\" class=\"text-center\">#</th>\n              <th scope=\"col\" class=\"text-left\">Name</th>\n              <th scope=\"col\" class=\"text-center\">Number</th>\n              <th scope=\"col\" class=\"text-center\">Cost</th>\n              <th scope=\"col\" class=\"text-center\">In-stock</th>\n              <th scope=\"col\" class=\"text-center\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let part of parts$| async ; index as i\">\n              <td scope=\"row\" class=\"text-center\">{{i+1}}</td>\n              <td class=\"text-left\">{{part.name}}</td>\n              <td class=\"text-center\">{{part?.partNumber}}</td>\n              <td class=\"text-center\">{{part?.cost}}</td>\n              <td class=\"text-center\">{{part?.inStock}} <button>R</button> <button>C</button></td>\n              <td> <a [routerLink]=\"['/edit', part.id]\" class=\"btn btn-dark\">Edit</a></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</section>\n\n"]},"metadata":{},"sourceType":"module"}